// Generated by CoffeeScript 1.10.0
(function() {
  var Spell, SummonGolem, sacrifice,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Spell = (function() {
    function Spell(name) {
      this.name = name;
      this.cast = bind(this.cast, this);
      this.tick = bind(this.tick, this);
      this.expiration = bind(this.expiration, this);
      this.effect = bind(this.effect, this);
      this.description;
      this.cost;
      this.duration;
      ({
        duration_cur: 0
      });
    }

    Spell.prototype.effect = function() {
      return this.tick();
    };

    Spell.prototype.expiration = function() {
      return this.duration_cur = 0;
    };

    Spell.prototype.tick = function() {
      if (this.duration_cur > 0) {
        this.duration_cur -= 1;
        return setTimeout(this.tick, 1000);
      } else {
        return this.expiration();
      }
    };

    Spell.prototype.cast = function() {
      if (!(mana < this.cost)) {
        this.duration_cur = this.duration;
        mana -= this.cost;
        return this.effect();
      }
    };

    return Spell;

  })();

  SummonGolem = (function(superClass) {
    extend(SummonGolem, superClass);

    function SummonGolem() {
      this.expiration = bind(this.expiration, this);
      this.effect = bind(this.effect, this);
      SummonGolem.__super__.constructor.call(this, "golem");
    }

    SummonGolem.prototype.description = "summon potato golem to boost your production";

    SummonGolem.prototype.cost = 10;

    SummonGolem.prototype.duration = 60;

    SummonGolem.prototype.effect = function() {
      SummonGolem.__super__.effect.apply(this, arguments);
      return magicMultiplier += 0.15;
    };

    SummonGolem.prototype.expiration = function() {
      return magicMultiplier -= 0.15;
    };

    return SummonGolem;

  })(Spell);

  sacrifice = function(n) {
    if (!(potatoCount < n)) {
      mana += n;
      return potatoCount -= n;
    }
  };

}).call(this);
